<?php
// ==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--
// Products Magento Class  [V.0.0.1]  (2017-05-11)
// Brqx Group - Agile Farmacia Zaragoza Methodology
// Spc - Cica_d05 - Home - Index_06 - v0_0_1
//-------------------------------------------------------------------------------------
// Manage Magento object - Abstraction for Magento version
//-------------------------------------------------------------------------------------
// ==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--
// Methods:
// - create_product		: Create product by code , name , price
// - assign_catToproduct : Assign product to category with category SKU and produc Code
// - delete_product : Delete product by code
// - get_productlist : Get all product list
//-------------------------------------------------------------------------------------
// - build_data   	  : Build html final code for object 
// ==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--==--


class mgi_products extends mg_print	
{
	public		$n 			=	'mgi_products::'			;


    public function __construct ()
   	{   

	}
	
	//create_product('code4','product4',100)
	public function create_product($code,$name,$price)
   	{   
	$id = Mage::getModel('catalog/product')->getIdBySku($code);
    if (false !== $id) {
    //sku exists
	echo $code.' product already exists';
	return 0;
	}else{
    $product = Mage::getModel('catalog/product');
    $product
    ->setStoreId(1) //you can set data in store scope
    ->setWebsiteIds(array(1)) //website ID the product is assigned to, as an array
    ->setAttributeSetId(4) //ID of a attribute set named 'default'
    ->setTypeId('simple') //product type
    ->setCreatedAt(strtotime('now')) //product creation time
    //->setUpdatedAt(strtotime('now')) //product update time
 
    ->setSku($code) //SKU
    ->setName($name) //product name
    ->setWeight(0.0000)
    ->setStatus(1) //product status (1 - enabled, 2 - disabled)
    ->setTaxClassId(4) //tax class (0 - none, 1 - default, 2 - taxable, 4 - shipping)
    ->setVisibility(Mage_Catalog_Model_Product_Visibility::VISIBILITY_BOTH) //catalog and search visibility
    ->setPrice($price) //price in form 11.22
    ->setDescription('<p>&nbsp;</p>')
    ->setShortDescription('<p>&nbsp;</p>')
    ->setStockData(array(
                       'use_config_manage_stock' => 0, //'Use config settings' checkbox
                       'manage_stock'=>1, //manage stock
                       'min_sale_qty'=>1, //Minimum Qty Allowed in Shopping Cart
                       'max_sale_qty'=>2, //Maximum Qty Allowed in Shopping Cart
                       'is_in_stock' => 1, //Stock Availability
                       'qty' => 999 //qty
                   )
    );
 
    //->setCategoryIds(array(3, 10)); //assign product to categories
    $product->save();
	}
	}
	
	//assign product to category
	//assign_catToproduct('C-01_01_01-351','code4');//parems first for category sku and second for product SKU
	public function assign_catToproduct($csku,$pcode){
		//echo $csku;die;
		$id = Mage::getModel('catalog/product')->getIdBySku($pcode);
		if (false !== $id) {
		//sku exists
		$_category = Mage::getResourceModel('catalog/category_collection')
        ->addFieldToFilter('category_sku', $csku);
		//->addAttributeToFilter('level',$level)
        //->getFirstItem();
		$cid=$_category->getFirstItem()->getId();
		if($cid==''){
		echo $csku.' category not exists';
		return 0;
		}

		$category = Mage::getModel('catalog/category')->load($cid);

		$catids = array();
		$catids[]=$cid;
		foreach ($category->getParentCategories() as $parent) {
			$catids[] = $parent->getId();
		}
		$product = Mage::getModel('catalog/product')->loadByAttribute('sku', $pcode);
		if($product){
			$product->setCategoryIds($catids)->save();
		}
		
		}else{
		echo $pcode.' product not exists';
		return 0;
		
		}		
	}
	
	//delete_product('code4')
	public function delete_product($code){
	$product = Mage::getModel('catalog/product')->loadByAttribute('sku', $code);
	    if($product) {
			$product->delete();
	    }else{
		    echo $code.' product not exists'; 
	    }

	}
	
	//get_productlist()
	public function get_productlist(){
		$productCollection = Mage::getModel('catalog/product')->getCollection();
		return $productCollection;
	}



}
 
